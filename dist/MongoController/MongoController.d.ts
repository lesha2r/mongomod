import MongoConnection from '../MongoConnection/index.js';
import { MethodCountOptions } from './operations/count.js';
import { MethodDistinctOptions } from './operations/distinct.js';
import { MethodBulkWriteOptions } from './operations/bulkWrite.js';
import { MethodFindOneOptions } from './operations/findOne.js';
import { AggregationPipeline } from './operations/aggregate.js';
import { MethodFindManyOptions } from './operations/findMany.js';
import { MethodDeleteOptions } from './operations/deleteMany.js';
import { MethodInsertOneOptions } from './operations/insertOne.js';
import { MethodUpdateOneOptions } from './operations/updateOne.js';
import { MethodDeleteOneOptions } from './operations/deleteOne.js';
import { MethodEnsureIndexOptions } from './operations/ensureIndex.js';
import { MethodUpdateManyOptions } from './operations/updateMany.js';
import { MethodInsertManyOptions } from './operations/insertMany.js';
declare class MongoController {
    db: MongoConnection;
    collection: string;
    constructor(db: MongoConnection, collection: string);
    getClient(): any;
    getCollectionCtrl(): any;
    findOne(options: MethodFindOneOptions): Promise<import("../QueryResult.js").default<any>>;
    findMany(options: MethodFindManyOptions): Promise<import("../QueryResult.js").default<any>>;
    insertOne(options: MethodInsertOneOptions): Promise<import("../QueryResult.js").default<any>>;
    updateOne(options: MethodUpdateOneOptions): Promise<import("../QueryResult.js").default<any>>;
    deleteOne(options: MethodDeleteOneOptions): Promise<import("../QueryResult.js").default<any>>;
    updateMany(options: MethodUpdateManyOptions): Promise<import("../QueryResult.js").default<any>>;
    deleteMany(options: MethodDeleteOptions): Promise<import("../QueryResult.js").default<any>>;
    insertMany(options: MethodInsertManyOptions): Promise<import("../QueryResult.js").default<any>>;
    aggregate(pipeline: AggregationPipeline): Promise<import("../QueryResult.js").default<any>>;
    count(options: MethodCountOptions): Promise<import("../QueryResult.js").default<any>>;
    distinct(options: MethodDistinctOptions): Promise<import("../QueryResult.js").default<any>>;
    bulkWrite(operations?: MethodBulkWriteOptions): Promise<import("../QueryResult.js").default<any>>;
    ensureIndex(checkKeys: MethodEnsureIndexOptions): Promise<import("../QueryResult.js").default<null> | import("../QueryResult.js").default<import("./operations/ensureIndex.js").MethodEnsureIndexResult>>;
}
export default MongoController;
